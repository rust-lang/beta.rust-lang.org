{{#*inline "page"}}

<header>
  <div class="container">
    <h1>Tools</h1>
  </div>
</header>

<section id="tools-write" class="green">
  <div class="container">
    <header>
      <h2>
        First-class editor support
      </h2>
      <div class="highlight highlight-yellow"></div>
    </header>
    <br>
    <div class="tools-row">
      <div id="tools-write-ide-prose">
      <p>Whether you prefer portable command-line editors, or rich graphical
        editors, there's probably a Rust integration available already. Or if
        you'd like to build your own integration, take a look at the
        <a href="https://github.com/rust-lang-nursery/rls">
          Rust Language Server
        </a>.
      </div>
    </div>
    <div class="row">
      <div class="three columns">
        <a href="https://plugins.jetbrains.com/plugin/8182-rust"
           class="button button-secondary">Android Studio</a>
      </div>
      <div class="three columns">
        <a href="https://github.com/rust-lang-nursery/atom-ide-rust"
           class="button button-secondary">Atom</a>
      </div>
      <div class="three columns">
        <a href="https://github.com/rust-lang/rust-mode"
           class="button button-secondary">Emacs</a>
      </div>
      <div class="three columns">
        <a href="https://plugins.jetbrains.com/plugin/8182-rust"
           class="button button-secondary">IntelliJ IDEA</a>
      </div>
    </div>
    <div class="row">
      <div class="three columns">
        <a href="https://github.com/rust-lang/rust-enhanced"
           class="button button-secondary">Sublime Text 3</a>
      </div>
      <div class="three columns">
        <a href="https://github.com/rust-lang/rust.vim"
           class="button button-secondary">Vim</a>
      </div>
      <div class="three columns">
        <a href="https://marketplace.visualstudio.com/items?itemName=rust-lang.rust"
           class="button button-secondary">VS Code</a>
      </div>
      <div class="three columns">
        <a href="https://plugins.jetbrains.com/plugin/8182-rust"
           class="button button-secondary">WebStorm</a>
      </div>
    </div>
  </div>
</section>

<section id="tools-build" class="red">
  <div class="container">
    <header>
      <h2>Build</h2>
      <div class="highlight highlight-red"></div>
    </header>
    <div class="row">
      <div class="four columns" id="type-systems">
        <code class="code-header">cargo build</code>
        <p>Cargo takes the hassle out of dependency management and building your
          project. Adding a dependency means adding a single line to the
          manifest. Build, run, test, or publish your project a single command
        and no extra configuration.</p>
      </div>
      <div class="four columns" id="linting">
        <code class="code-header">cargo clippy</code>
        <p>Powerful, reliable, and configurable linting; from style to safety
          and performance. Built with the Rust compiler, Clippy lets you catch
          even more bugs at compile-time.</p>
      </div>
      <div class="four columns" id="linting">
        <code class="code-header">cargo +aarch64-apple-ios build</code>
        <p>Rust runs on a multitude of platforms, from Windows, MacOS, and Linux on laptops, to IOS and Android on mobile phones, to Cortex-M micro-controllers. Rustup makes compiling for different platforms and operating systems streamlined and easy: installing platform-specific components and switching target platform are all simple commands.</p>
      </div>
    </div>
  </div>
</section>

<section id="tools-debug" class="purple">
  <div class="container">
    <header>
      <h2>Debug</h2>
      <div class="highlight highlight-yellow"></div>
    </header>
    <br>
    <code class="code-header">rust-lldb</code>

    <p>Compiling Rust produces standard debugging information. That means all your tools for C or C++ will work with Rust. GDB, LLDB, Valgrind, profilers, code sanitizers, and more all work as expected with no extra configuration. We've added dedicated Rust support to popular debuggers to provide an even better experience.</p>
  </div>
</section>

{{/inline}}
{{~> (parent)~}}
