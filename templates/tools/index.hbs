{{#*inline "page"}}

<header class="mt3 mt2-ns mb4 mb5-ns tc tl-ns">
  <div class="w-100 mw-none ph3 mw8-m mw9-l center f3">
    <h1>Tools</h1>
  </div>
</header>

<section id="tools-write" class="green">
  <div class="w-100 mw-none ph3 mw8-m mw9-l center f3">
    <header>
      <h2>
        First-class editor support
      </h2>
      <div class="highlight highlight-yellow"></div>
    </header>
    <br>
    <div class="tools-row">
      <div id="tools-write-ide-prose">
      <p>Whether you prefer working with code from the command line, or using
        rich graphical editors, there’s a Rust integration available for your
        editor of choice. Or you can build your own using the
        <a href="https://github.com/rust-lang-nursery/rls">Rust Language Server</a>.
      </div>
    </div>
    {{> components/tools/editors }}
  </div>
</section>

<section id="tools-build" class="purple">
  <div class="w-100 mw-none ph3 mw8-m mw9-l center f3">
    <header>
      <h2>
        Bring calmness to your builds
      </h2>
      <div class="highlight highlight-red"></div>
    </header>
    <p>
      Cargo is the build tool for Rust. It bundles all common actions into a
      single command. No boilerplate required.
    </p>
    <div class="row">
      <div class="four columns" id="type-systems">
        <h3 class="code-header">
          Install
        </h3>
        <p>
          With tens of thousands of packages, there’s a good chance
          <a href="https://crates.io">crates.io</a> has the solution you’re
          looking for. Stand on the shoulders of giants, and move your team from
          repetition to innovation.
        </p>
      </div>
      <div class="four columns" id="linting">
        <h3 class="code-header">
          Test
        </h3>
        <p>
          Bring confidence to your code through Rust’s excellent testing tools.
          <code>cargo test</code> is Rust’s unified solution to testing. Write
          tests next to your code, or in separate files: it provides a solution
          for all testing needs.
        </p>
      </div>
      <div class="four columns" id="type-systems">
        <h3 class="code-header">
          Deploy
        </h3>
        <p>
          <code>cargo build</code> creates lean binaries for every platform.
          With a single command your code can target Windows, Linux, OSX, and
          the web. All part of a modern interface, with no need for bespoke
          build files.
        </p>
      </div>
    </div>
  </div>
</section>

<section id="tools-debug" class="red">
  <div class="w-100 mw-none ph3 mw8-m mw9-l center f3">
    <header>
      <h2>
        Velocity through automation
      </h2>
      <div class="highlight highlight-red"></div>
    </header>
    <br>
    <p>
      Rust’s industry-grade tools make collaboration fearless, allowing teams to
      focus on the tasks that matter.
    </p>
    <div class="flex-none flex-l flex-row">
      <div class="mt5 mt2-l flex flex-column w-100">
        <h3 class="code-header">
          Rustfmt
        </h3>
        <p class="flex-grow-1">
          Rustfmt automatically formats Rust code, making it easier to read,
          write, and maintain. And most importantly: never debate spacing or
          brace position ever again.
        </p>
        <a href="https://github.com/rust-lang-nursery/rustfmt"
             class="button button-secondary">Go to repo</a>
      </div>
      <div class="mt5 mt2-l flex flex-column w-100 ml5-l">
        <h3 class="code-header">
          Clippy
        </h3>
        <p class="flex-grow-1">
          <i>“It looks like you’re writing an Iterator.”</i> <br> Clippy
          helps developers of all experience levels write idiomatic code, and
          enforce standards.
        </p>
         <a href="https://github.com/rust-lang-nursery/rust-clippy"
             class="button button-secondary">Go to repo</a>
      </div>
      <div class="mt5 mt2-l flex flex-column w-100 ml5-l">
        <h3 class="code-header">
          Cargo Doc
        </h3>
        <p class="flex-grow-1">
          Cargo’s doc builder makes it so no API ever goes undocumented. It’s
          available locally through <code>cargo doc</code>, and online for
          public crates through <a href="https://docs.rs">docs.rs</a>.
        </p>
        <a href="https://docs.rs/"
             class="button button-secondary">Go to site</a>
      </div>
    </div>
  </div>
</section>

{{/inline}}
{{~> (parent)~}}
