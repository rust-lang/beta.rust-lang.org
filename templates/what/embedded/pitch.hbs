<section id="embedded-why-rust" class="background-green">
    <div class="container">
        <header>
            <h2>Why Rust for embedded development?</h2>
            <div class="highlight highlight-purple"></div>
        </header>
        <div class="row">
            <div class="four columns" id="powerful-static-analysis">
                <div class="domain-icon">
                    <img src="/static/images/microscope.svg" alt="A microscope" />
                    <h3>Powerful static analysis</h3>
                </div>
                <p>
                    Enforce pin and peripheral configuration at compile time. Guarantee that resources won't be used by
                    unintended parts of your application.
                    <a href="https://github.com/rust-embedded/book/issues/5">Learn more</a>
                </p>
            </div>
            <div class="four columns" id="flexible-memory-management">
                <div class="domain-icon">
                    <img src="/static/images/ram-memory.svg" alt="A RAM stick" />
                    <h3>Flexible memory management</h3>
                </div>
                <p>
                    Dynamic memory allocation is optional. Use a global allocator and dynamic data structures.
                    Or leave out the heap altogether and statically allocate everything.
                    <a href="https://github.com/rust-lang-nursery/embedded-wg/issues/125">Learn more</a>
                </p>
            </div>
            <div class="four columns" id="safe-concurrency">
                <div class="domain-icon">
                    <img src="/static/images/gears.svg" alt="Gears" />
                    <h3>Fearless concurrency</h3>
                </div>
                <p>
                    Rust makes it impossible to accidentally share state between threads.
                    Use any concurrency approach you like, and you'll still get Rust's strong guarantees.
                    <a href="https://github.com/rust-lang-nursery/embedded-wg/issues/124">Learn more</a>
                </p>
            </div>
        </div>
        <div class="row">
            <div class="four columns" id="Interoperability">
                <div class="domain-icon">
                    <img src="/static/images/handshake.svg" alt="Handshake" />
                    <h3>Interoperability</h3>
                </div>
                <p>
                    Integrate Rust into your existing C codebase or leverage an existing SDK to write a Rust
                    application.
                    <a href="https://github.com/rust-lang-nursery/embedded-wg/issues/48">Learn more</a>
                </p>
            </div>
            <div class="four columns" id="portability">
                <div class="domain-icon">
                    <img src="/static/images/luggage.svg" alt="Luggage trolley" />
                    <h3>Portability</h3>
                </div>
                <p>
                    Write a library or driver once, and use it with a variety of systems, ranging
                    from very small microcontrollers to powerful SBCs.
                    <a href="https://github.com/rust-lang-nursery/embedded-wg/issues/119">Learn more</a>
                </p>
            </div>
            <div class="four columns">
                <div class="domain-icon">
                    <img src="/static/images/question.svg" alt="?" />
                    <h3>$RESERVED</h3>
                </div>
                <p>
                    We'll think of something to put here...
                </p>
            </div>
        </div>
    </div>
</section>