{{#*inline "page"}}

<header>
  <div class="container">
    <h1>Write Solid Command Line Applications</h1>

    <h1 class="subtitle">
      Thanks to a great ecosystem that promotes best practices and easy distribution, you can get started with writing CLI apps
      in Rust in no time.
    </h1>
  </div>
</header>

<section id="cli-pitch">
  <div class="container">
    <div class="row">
      <article class="four columns box">
        <header class="domain-icon">
          <img src="/static/images/cli-is-no-rocket-science.svg" alt="CLI apps are no rocket science"/>
          <h3>Easy to get started with Rust</h3>
        </header>
        <p class="box-content">
          Learn Rust by writing a command line tools.
          Implementing internal tools is also a great way to introduce Rust to your team.
        </p>
        <p class="button button-secondary">
          <a href="#">Learn more &rarr;</a>
        </p>
      </article>
      <article class="four columns box">
        <header class="domain-icon">
          <img src="/static/images/cli-packaging.svg" alt="A package"/>
          <h3>Easy Distribution</h3>
        </header>
        <p class="box-content">
          Compile everything down to a single binary, no need for your users to have a runtime installed.
        </p>
        <p class="button button-secondary">
          <a href="#">Learn more &rarr;</a>
        </p>
      </article>
      <article class="four columns box">
        <header class="domain-icon">
          <img src="/static/images/cli-rustc-approved.svg" alt="Benefit from Rust's guarantees"/>
          <h3>Super solid</h3>
        </header>
        <p class="box-content">
          Even if all you want to write is a short one-off script: You can be confident it's fast, easily testable, and gives useful
          error messages.
        </p>
        <p class="button button-secondary">
          <a href="#">Learn more &rarr;</a>
        </p>
      </article>
    </div>
  </div>
</section>

<section id="cli-quotes">
  <div class="container">
    <article>
      <h2>Rust CLI application in production</h2>

      <div>
        <h3>Sentry's CLI</h3>
        <blockquote>"Rust is awesome and fun and you should use it"</blockquote>
        <p>
          <a href="https://www.youtube.com/watch?v=2Xu6EdEBa5E">Watch Armin Ronacher's talk at PolyConf 17</a>
        </p>
      </div>
    </article>
  </div>
</section>

<section id="cli-features">
  <div class="container">
    <div class="row">
      <article class="four columns box">
        <header class="domain-icon">
          <img src="/static/images/cli-signals.svg" alt=""/>
          <h3>Signal handling</h3>
        </header>
        <p>
          Handle application signals with ease with a range of special crates, designed for various usecases.
        </p>
      </article>
      <article class="four columns box">
        <header class="domain-icon">
          <img src="/static/images/cli-app-structure.svg" alt=""/>
          <h3>Argument parsing</h3>
        </header>
        <p>
          Easily parse commandline arguments via a range of crates and the ecosystems that are built around them. Never worry about invalid or out-of-range data in your CLI again.
        </p>
      </article>
      <article class="four columns box">
        <header class="domain-icon">
          <img src="/static/images/cli-exit.svg"/>
          <h3>Exit codes</h3>
        </header>
        <p>
          Let your application terminate correctly by returning the standard exit codes that are expected of it. Utility crates exist to make this process as easy as possible for you.
        </p>
      </article>
    </div>
    <div class="row">
      <article class="four columns box">
        <header class="domain-icon">
          <img src="/static/images/cli-logging.svg" alt=""/>
          <h3>Adaptable logging</h3>
        </header>
        <p>
          We need to build it so that it scales organic growth, yet product management breakout fastworks. Overcome key issues to meet key milestones. One-sheet globalize, and we need a paradigm shift.
        </p>
      </article>
      <article class="four columns box">
        <header class="domain-icon">
          <img src="/static/images/cli-man.svg" alt=""/>
          <h3>Manuals? Done.</h3>
        </header>
        <p>
          Generate manual pages for your application simply by using a commandline argument parser. There's no extra effort required on your part. Simple package the generated files to your user and it's all done.
        </p>
      </article>
      <article class="four columns box">
        <header class="domain-icon">
          <img src="/static/images/cli-configs.svg" alt=""/>
          <h3>Handle config files</h3>
        </header>
        <p>
          Handle configuration files without worrying about what platform you're running on: request a config file, and a crate will deal with namespaces and formats for you.
        </p>
      </article>
    </div>
  </div>
</section>

<section id="cli-use-it">
  <div class="container">
    <div class="row">
      <article class="six columns box">
        <h2>Define your inputs</h2>
        <pre><code>{{> what/cli/code-inputs }}</code></pre>
      </article>

      <article class="six columns box">
        <h2>Write your tool</h2>
        <pre><code>{{> what/cli/code-main }}</code></pre>
      </article>
    </div>
  </div>
</section>

{{/inline}} {{~> (parent)~}}